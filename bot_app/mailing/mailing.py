from typing import List, Tuple, Optional

from sqlalchemy.ext.asyncio import AsyncSession
from aiogram.types.inline_keyboard_markup import InlineKeyboardMarkup
from aiogram.types.inline_keyboard_button import InlineKeyboardButton

from bot_app.core.config import bot
from bot_app.database.models import User
from bot_app.mailing.distribution import distribution

MEETING_MESSAGE = '''
–í–∞—à–∞ –ø–∞—Ä–∞ –¥–ª—è –ö–æ—Ñ–µ –≤—Å–ª–µ–ø—É—é {} {} ({}).
–î–æ–≥–æ–≤–æ—Ä–∏—Ç–µ—Å—å —Å –∫–æ–ª–ª–µ–≥–æ–π –æ –∫–æ—Ñ–µ –±—Ä–µ–π–∫–µ –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ.
–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –≤—Ä–µ–º—è–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏—è!
'''
MEET_OK = '–î–∞'
MEET_FALSE = '–ù–µ—Ç'
MEET_END_OF_WEEK = '–í—Å—Ç—Ä–µ—Ç–∏–º—Å—è –≤ –∫–æ–Ω—Ü–µ –Ω–µ–¥–µ–ª–∏'
REMINDER_MAILING = '–£–¥–∞–ª–æ—Å—å –ª–∏ —É–∂–µ –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å—Å—è —Å –∫–æ–ª–ª–µ–≥–æ–π –∏ –≤—ã–ø–∏—Ç—å —á–∞—à–µ—á–∫—É –∫–æ—Ñ–µ?'
TEXT_FOR_EXTRA = """
–ü—Ä–∏–≤–µ—Ç!–ù–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ –≤ –Ω–∞—à–µ–º –ø—Ä–æ–µ–∫—Ç–µ ¬´–ö–æ—Ñ–µ –≤—Å–ª–µ–ø—É—é¬ª¬†–Ω–µ—á–µ—Ç–Ω–æ–µ¬†–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
—É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, –ø–æ—ç—Ç–æ–º—É –∏–º—è –∫–æ–ª–ª–µ–≥–∏ —Ç–µ–±–µ –ø—Ä–∏–¥–µ—Ç –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–π –Ω–µ–¥–µ–ª–µ.
–ù–æ —Å–µ–π—á–∞—Å –Ω–µ —Ç–µ—Ä—è–π –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å, –ø—Ä–∏–≥–ª–∞—Å–∏ –Ω–∞ —á–∞—à–µ—á–∫—É –∫–æ—Ñ–µ –ª—é–±–æ–≥–æ
–∫–æ–ª–ª–µ–≥—É –∏ –ø—Ä–µ–¥–ª–æ–∂–∏ –µ–º—É –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –Ω–∞—à–µ–º—É –ø—Ä–æ–µ–∫—Ç—É
(–∫–æ–Ω–µ—á–Ω–æ, –µ—Å–ª–∏ –æ–Ω –µ—â–µ –Ω–µ —É—á–∞—Å—Ç–≤—É–µ—Ç)!
–û—Ç–ª–∏—á–Ω–æ–≥–æ –¥–Ω—è –∏ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ–π –Ω–µ–¥–µ–ª–∏üòä
"""

meet_inline_buttons = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text=MEET_OK, callback_data='button_meeting'),
         InlineKeyboardButton(text=MEET_FALSE,
                              callback_data='button_meeting')],
        [InlineKeyboardButton(text=MEET_END_OF_WEEK,
                              callback_data='button_meeting')],
    ])


async def mailing_by_user_tg_id(chat_id: str,
                                text: str,
                                inline_buttons: Optional[InlineKeyboardMarkup] = None):
    await bot.send_message(chat_id=chat_id, text=text,
                           reply_markup=inline_buttons)


async def meeting_mailing(session: AsyncSession): #(meetings_pairs: List[Tuple[User, User]], no_pair):
    meetings_pairs, no_pair = await distribution(session)
    if no_pair:
        print(no_pair)
        await mailing_by_user_tg_id(chat_id=no_pair.tg_id, text=TEXT_FOR_EXTRA)
    print(meetings_pairs)
    for pair in meetings_pairs:
        await mailing_by_user_tg_id(chat_id=pair[0].tg_id,
                                    text=MEETING_MESSAGE.format(pair[1].name,
                                    pair[1].last_name, pair[1].email))
        await mailing_by_user_tg_id(chat_id=pair[1].tg_id,
                                    text=MEETING_MESSAGE.format(pair[0].name,
                                    pair[0].last_name, pair[0].email))


async def meeting_reminder_mailing(session: AsyncSession):
    users = await User.get_all_is_sent(session)
    await User.set_is_sent_status_false(users, session)
    for user in users:
        await mailing_by_user_tg_id(chat_id=user.tg_id,
                                    text=REMINDER_MAILING,
                                    inline_buttons=meet_inline_buttons)
